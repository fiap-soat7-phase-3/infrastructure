apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-nginx.conf
data:
  nginx.conf-data: |
    events {
        worker_connections 1024;
    }
    http {
      server {
        resolver kube-dns.kube-system.svc.cluster.local;

        listen 80;

        location = / {
            add_header Content-Type text/html;
            return 200 '<pre><h3>FIAP SOAT7 - T75</h3><br />eks/proxy/food-app@v4</pre>';
        }

        location ~ ^/([\w_-]+)(/.*) {
            proxy_pass http://app-svc-$1.food-app.svc.cluster.local$2;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-proxy-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-proxy
  template:
    metadata:
      labels:
        app: app-proxy
    spec:
      volumes:
      - name: nginx-conf-volume
        configMap:
          name: proxy-nginx.conf

      containers:
      - name: app-reverse-proxy
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf-data

---

apiVersion: v1
kind: Service
metadata:
  name: app-svc-proxy
spec:
  type: NodePort
  selector:
    app: app-proxy
  ports:
  - name: "http"
    port: 80
    targetPort: 80
    nodePort: 30003